# Generated by Django 5.2.5 on 2025-08-24 15:53

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import django_resized.forms
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Child',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('nip', models.CharField(max_length=50)),
                ('date_birth', models.DateField()),
                ('address', models.CharField(max_length=100)),
                ('sex', models.CharField(choices=[('M', 'Masculino'), ('F', 'Femenino'), ('O', 'Otro')], max_length=50)),
                ('health_requirements', models.TextField()),
                ('food_requirements', models.TextField()),
                ('periodic_medications', models.TextField()),
                ('observations', models.TextField()),
                ('exp', models.IntegerField()),
                ('image', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format=None, keep_meta=True, max_length=1000, null=True, quality=-1, scale=None, size=[300, 300], upload_to='child_images/')),
                ('active', models.BooleanField(default=True)),
                ('date_down', models.DateField(null=True)),
            ],
            options={
                'verbose_name': 'Child',
                'verbose_name_plural': 'Childs',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='UserApp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('rol', models.CharField(choices=[('Admin', 'Admin'), ('Profesor', 'Profesor'), ('Progenitor', 'Progenitor'), ('Supervisor', 'Supervisor')], default='Admin', max_length=20)),
                ('nip', models.CharField(max_length=20, unique=True)),
                ('security_question', models.CharField(blank=True, default='', max_length=30, null=True)),
                ('security_answer', models.CharField(blank=True, default='', max_length=30, null=True)),
                ('mother', models.BooleanField(default=True)),
                ('terms', models.BooleanField(default=False)),
                ('must_change_password', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'UserApp',
                'verbose_name_plural': 'UsersApp',
                'managed': True,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(auto_created=True, auto_now_add=True)),
                ('title', models.CharField(max_length=50)),
                ('content', models.TextField()),
                ('publish', models.DateField()),
                ('active', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Alert',
                'verbose_name_plural': 'Alerts',
                'db_table': '',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Nombre')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('childs', models.ManyToManyField(to='core.child')),
            ],
            options={
                'verbose_name': 'Activity',
                'verbose_name_plural': 'Activitys',
                'db_table': '',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ClassGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Nombre')),
                ('childs', models.ManyToManyField(to='core.child')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'ClassGroup',
                'verbose_name_plural': 'ClassGroups',
                'db_table': '',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Gallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format=None, keep_meta=True, null=True, quality=-1, scale=None, size=[300, 300], upload_to='classgroups_images/')),
                ('date', models.DateField(auto_now=True)),
                ('classgroup', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.classgroup')),
            ],
            options={
                'verbose_name': 'Gallery',
                'verbose_name_plural': 'Galleries',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PageVisit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visit_count', models.IntegerField(default=0)),
                ('last_visited', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'PageVisit',
                'verbose_name_plural': 'PageVisits',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Parent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50, null=True, verbose_name='Nombre')),
                ('last_name', models.CharField(max_length=50, null=True, verbose_name='Apellidos')),
                ('nip', models.CharField(max_length=50, null=True, verbose_name='NIP')),
                ('address', models.CharField(max_length=200, null=True, verbose_name='Dirección')),
                ('phone', models.CharField(max_length=50, null=True, verbose_name='Teléfono')),
                ('illnesses', models.CharField(max_length=1000, null=True, verbose_name='Enfermedades que padece')),
                ('alcoholism', models.BooleanField(null=True, verbose_name='Alcoholismo')),
                ('smoking', models.BooleanField(null=True, verbose_name='Tabaquismo')),
                ('is_mother', models.BooleanField(null=True)),
                ('life', models.BooleanField(null=True)),
                ('active', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Parent',
                'verbose_name_plural': 'Parents',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='child',
            name='father',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='father', to='core.parent'),
        ),
        migrations.AddField(
            model_name='child',
            name='mother',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mother', to='core.parent'),
        ),
        migrations.CreateModel(
            name='Professor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nip', models.CharField(max_length=50, null=True, unique=True, verbose_name='NIP')),
                ('address', models.CharField(max_length=200, null=True, verbose_name='Dirección')),
                ('phone', models.CharField(max_length=50, null=True, verbose_name='Teléfono')),
                ('school_level', models.CharField(choices=[('Primaria', 'Primaria'), ('Secundaria', 'Secundaria'), ('Técnica y Profesional', 'Técnica y Profesional'), ('Medio Superior', 'Medio Superior'), ('Superior', 'Superior')], max_length=50, null=True, verbose_name='Nivel escolar')),
                ('cv', models.TextField(null=True)),
                ('image', models.ImageField(blank=True, max_length=1000, null=True, upload_to='child_images/')),
                ('active', models.BooleanField(default=True)),
                ('is_supervisor', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Professor',
                'verbose_name_plural': 'Professors',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='AssistanceDaily',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('child', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.child')),
                ('professor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.professor')),
            ],
        ),
        migrations.CreateModel(
            name='ReportChild',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField(verbose_name='Resumen')),
                ('type', models.CharField(choices=[('Salud', 'Salud'), ('Logros', 'Logros')], max_length=50)),
                ('date', models.DateField()),
                ('active', models.BooleanField(default=True)),
                ('child', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.child')),
            ],
            options={
                'verbose_name': 'ReportChild',
                'verbose_name_plural': 'ReportChilds',
                'db_table': '',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Bill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('month', models.CharField(choices=[('Enero', 'Enero'), ('Febrero', 'Febrero'), ('Marzo', 'Marzo'), ('Abril', 'Abril'), ('Mayo', 'Mayo'), ('Junio', 'Junio'), ('Julio', 'Julio'), ('Agosto', 'Agosto'), ('Septiembre', 'Septiembre'), ('Octubre', 'Octubre'), ('Noviembre', 'Noviembre'), ('Diciembre', 'Diciembre')], default='Agosto', max_length=50, verbose_name='Mes')),
                ('year', models.IntegerField(choices=[(2022, 2022), (2023, 2023), (2024, 2024), (2025, 2025)], default=2025, verbose_name='Año')),
                ('currency', models.CharField(choices=[('USD', 'USD'), ('Euro', 'Euro'), ('MLC', 'MLC'), ('USA Zelle', 'USA Zelle')], default='USD', max_length=50, verbose_name='Moneda')),
                ('amount', models.FloatField()),
                ('active', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('paid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.child', verbose_name='Niño/a')),
            ],
            options={
                'verbose_name': 'Bill',
                'verbose_name_plural': 'Bills',
                'managed': True,
                'unique_together': {('paid', 'month')},
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('name', models.CharField(max_length=50, verbose_name='Nombre')),
                ('description', models.CharField(max_length=50, verbose_name='Descripción')),
                ('age_range', models.CharField(choices=[('1 a 3 años', '1 a 3 años'), ('3 a 5 años', '3 a 5 años'), ('más de 5 años', 'más de 5 años')], max_length=50)),
                ('cover', models.ImageField(upload_to='')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Event',
                'verbose_name_plural': 'Events',
                'managed': True,
                'unique_together': {('name', 'date')},
            },
        ),
        migrations.CreateModel(
            name='Family',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('age', models.IntegerField(null=True)),
                ('ic', models.CharField(max_length=50, null=True)),
                ('relationship', models.CharField(max_length=50)),
                ('type', models.CharField(max_length=50)),
                ('active', models.BooleanField(default=True)),
                ('status', models.CharField(choices=[('Aprobado', 'Aprobado'), ('Pendiente', 'Pendiente'), ('Rechazado', 'Rechazado')], max_length=50, null=True)),
                ('child', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.child')),
            ],
            options={
                'verbose_name': 'Family',
                'verbose_name_plural': 'Familys',
                'db_table': '',
                'managed': True,
                'unique_together': {('ic', 'child')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='child',
            unique_together={('nip', 'active')},
        ),
    ]
